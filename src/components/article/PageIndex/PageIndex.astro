---
import { getSubPageCollection } from '@/lib/getSubPageCollection';
import { basename, join } from 'node:path';

type Props = {
  basePath: string;
  excludePaths?: string[];
};

const { basePath, excludePaths } = Astro.props;

const subPages = await getSubPageCollection(basePath, excludePaths);

// order昇順でソート
subPages.sort((a, b) => (a.data.order && b.data.order ? a.data.order - b.data.order : -1));
---

<div class="wrapper">
  <div class="pageList">
    {
      subPages.map(async (page) => {
        const pageFileName = basename(page.slug);
        const hasSlot = Astro.slots.has(pageFileName);
        const description = hasSlot ? await Astro.slots.render(pageFileName) : page.data.description;

        return (
          <>
            <h2 class="pageTitleHeadings">
              <a href={join('/', page.slug)}>{page.data.title}</a>
            </h2>
            {hasSlot ? <Fragment set:html={description} /> : <p>{description}</p>}
          </>
        );
      })
    }
  </div>
</div>

<style>
  .wrapper {
    margin-block: 4rem;
  }

  .pageList {
    padding: 0;
    list-style: none;

    > li {
      margin-bottom: 2rem;
    }
  }

  .pageTitleHeading {
    font-size: var(--font-size-20);
    font-weight: bold;

    a {
      text-decoration: undeline;
    }
  }
</style>
